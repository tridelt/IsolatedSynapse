using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PuzzleVulnerabilityManager : MonoBehaviour
{
    public Transform bottom_blockade;

    private bool top_left = false;
    private bool top_right = true;
    private bool bottom_left = false;
    private bool bottom_right = false;

    private bool wheel1_active = false;

    void Awake()
    {
        Rune[] stateModifiers = FindObjectsOfType<Rune>();
        foreach (Rune stateModifier in stateModifiers)
        {
            stateModifier.onStateChanged.AddListener(() => OnObjectStateChanged(stateModifier));
        }
    }

    public void OnObjectStateChanged(Rune rune)
    {
        Debug.Log("message received");
        Debug.Log(rune.name);
        Debug.Log(rune.triggerPosition);
        if (rune.runeIsActive)
        {
            if (rune.name == "top_left_rune")
            {
                top_left = true;
            }
            else if (rune.name == "top_right_rune")
            {
                top_right = true;
            }
            else if (rune.name == "bottom_left_rune")
            {
                bottom_left = true;
            }
            else if (rune.name == "bottom_right_rune")
            {
                bottom_right = true;
            }
        }

        // If the correct combination of states has been achieved, open the door
        if (top_left && top_right && bottom_left && bottom_right)
        {
            Debug.Log("Puzzle solved");
            bottom_blockade.gameObject.SetActive(false);
        }
        else
        {
            Debug.Log("Puzzle not solved");

            // print all the boolean values
            Debug.Log("STATUS: " + top_left + " " + top_right + " " + bottom_left + " " + bottom_right);
            Debug.Log("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
        }
    }
}